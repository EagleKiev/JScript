//Про­стей­ший спо­соб объ­яв­ле­ния об­ра­бот­чи­ков со­бы­тий за­клю­ча­ет­ся в ис­поль­зо­ва­нии HTML-ат­ри­бу­тов, име­на ко­то­рых на­чи­на­ют­ся с при­став­ки «on». Об­ра­бот­чик «onclick» осо­бен­но удо­бен при соз­да­нии про­стых тес­то­вых про­грамм. Пред­по­ло­жим, что вы со­хра­ни­ли функ­ции debug() и hide(), пред­став­лен­ные вы­ше, в фай­лах с име­на­ми debug.js и hide.js. В этом слу­чае мож­но бы­ло бы на­пи­сать про­стой тес­то­вый HTML-файл, ис­поль­зую­щий эле­мен­ты <button> с  ат­ри­бу­та­ми onclick, оп­ре­де­ляю­щи­ми об­ра­бот­чи­ки со­бы­тий:

<script src="debug.js"></script>
<script src="hide.js"></script>
Hello
<button onclick="hide(this,true); debug('hide button 1');">Hide1</button>
<button onclick="hide(this); debug('hide button 2');">Hide2</button>
World

//Ни­же при­во­дит­ся еще один при­мер про­грамм­но­го ко­да на кли­ент­ском Ja­va­Script, ис­поль­зую­ще­го ме­ха­низм со­бы­тий. Он ре­ги­ст­ри­ру­ет об­ра­бот­чик очень важ­но­го со­бы­тия «load» и до­пол­ни­тель­но де­мон­ст­ри­ру­ет бо­лее слож­ный спо­соб ре­ги­ст­ра­ции об­ра­бот­чи­ка со­бытия «click»:

// Со­бы­тие "load" воз­бу­ж­да­ет­ся, ко­гда до­ку­мент бу­дет пол­но­стью за­гру­жен.
// Обыч­но мы вы­ну­ж­де­ны ждать это­го со­бы­тия, пре­ж­де чем мож­но бу­дет за­пус­тить
// наш про­грамм­ный код Ja­va­Script.
window.onload = function() { 			// За­пус­тит функ­цию по­сле за­груз­ки до­ку­мен­та

// Оты­скать все те­ги <img> в до­ку­мен­те
    var images = document.getElementsByTagName("img");
// Обой­ти их все в цик­ле, до­ба­вить к ка­ж­до­му об­ра­бот­чик со­бы­тия "click",
// что­бы обес­пе­чить со­кры­тие лю­бо­го изо­бра­же­ния по­сле щелч­ка на нем.
    for(var i = 0; i < images.length; i++) {
        var image = images[i];
        if (image.addEventListener)    		// Дру­гой спо­соб ре­ги­ст­ра­ции об­ра­бот­чи­ка
            image.addEventListener("click", hide, false);
        else                           		// Для со­вмес­ти­мо­сти с вер­си­ей IE8 и ни­же
            image.attachEvent("onclick", hide);
    }
						// Это функ­ция-об­ра­бот­чик со­бы­тий, ко­то­рая ре­ги­ст­ри­ру­ет­ся вы­ше
    function hide(event) { event.target.style.visibility = "hidden"; }
};
