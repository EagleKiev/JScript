'use strict';

let a = 0/0;
//let b = 1000;
//let c = false;

// Все, что следует за двумя символами слэша, является комментарием.
// Внимательно читайте комментарии: они описывают программный код JavaScript.
// Переменная - это символическое имя некоторого значения.
// Переменные объявляются с помощью ключевого слова var:
var x;         // Объявление переменной с именем x.
// Присваивать значения переменным можно с помощью знака =
x = 0;         // Теперь переменная x имеет значение 0
// => 0: В выражениях имя переменной замещается ее значением.
// JavaScript поддерживает значения различных типов
x = 1;                     // Числа.
x = 0.01;                  // Целые и вещественные числа представлены одним типом.
x = "hello world";         // Строки текста в кавычках.
x = 'JavaScript';          // Строки можно также заключать в апострофы.
x = true;                  // Логические значения.
x = false;                 // Другое логическое значение.
x = null;                  // null - особое значение, обозначающее "нет значения".
x = undefined;             // Значение undefined подобно значению null.

// Наиболее важным типом данных в JavaScript являются объекты.
// Объект - это коллекция пар имя/значение или отображение строки в значение.
var book = {               // Объекты заключаются в фигурные скобки.
    topic: "JavaScript",   // Свойство "topic" имеет значение "JavaScript".
    fat: true              // Свойство "fat" имеет значение true.
};                         // Фигурная скобка отмечает конец объекта.

// Доступ к свойствам объектов выполняется с помощью

book.topic                 // => "JavaScript"
book["fat"]                // => true: другой способ
book.author = "Flanagan";  // Создать новое свойство
book.contents = {};        // {} - пустой объект без . или []:
по­лу­чить зна­че­ние свойства.
    при­сваи­ва­ни­ем.
    свойств.
// Ja­va­Script под­дер­жи­ва­ет мас­си­вы (спи­ски с чи­сло­вы­ми ин­дек­са­ми) зна­че­ний:
    var primes = [2, 3, 5, 7]; // Мас­сив из 4 зна­че­ний, ог­ра­ни­чи­ва­ет­ся [ и ].
primes[0]                  // => 2: пер­вый эле­мент (с ин­дек­сом 0) мас­си­ва.
primes.length              // => 4: ко­ли­че­ст­во эле­мен­тов в мас­си­ве.
primes[primes.length-1]    // => 7: по­след­ний эле­мент мас­си­ва.
primes[4] = 9;             // До­ба­вить но­вый эле­мент при­сваи­ва­ни­ем.26
Глава 1. Введение в JavaScript
primes[4] = 11;                // Или из­ме­нить зна­че­ние имею­ще­го­ся эле­мен­та.
var empty = [];                // [] - пус­той мас­сив без эле­мен­тов.
empty.length                   // => 0
// Мас­си­вы и объ­ек­ты мо­гут хра­нить дру­гие мас­си­вы и объ­ек­ты:
var points = [                 // Мас­сив с 2 эле­мен­та­ми.
    {x:0, y:0},                // Ка­ж­дый эле­мент - это объ­ект.
    {x:1, y:1}
];
var data = {                   // Объ­ект с 2 свой­ст­ва­ми
    trial1: [[1,2], [3,4]],    // Зна­че­ние ка­ж­до­го свой­ст­ва - это мас­сив.
    trial2: [[2,3], [4,5]]     // Эле­мен­та­ми мас­си­ва яв­ля­ют­ся мас­си­вы.
};




//for (let line = '@'; line.length < 58; line += '#')
//console.log(line);

console.log(a);
//console.log(b)
console.log(typeof a);
//console.log(typeof b)
console.log(NaN == NaN);
console.log(2 >= 1);
//console.log(c);
//console.log(typeof c);

//console.log(a+b);
console.log(x);
